const schema = {
    USERS: "users",
    CITIES: "cities",
    STATES: "states",
    COUNTRIES: "countries",
    CUSTOMERS: "customers",
    PROJECTS: "projects",
    SUPERVISOR_ASSIGNMENTS: "supervisor_assignments",
    CUSTOMER_DEPARTMENTS: "customer_departments",
    FIRMS: "firms",
    CONTRACTOR_STORES: "contractor_stores",
    CUSTOMER_STORES: "customer_stores",
    SUPPLIERS: "suppliers",
    PROJECT_SITE_STORES: "project_site_stores",
    LOCATION_SITE_STORE: "location_site_stores",
    MATERIALS: "materials",
    UNIT_OF_MEASUREMENTS: "unit_of_measurements",
    COMPANIES: "companies",
    PARLIAMENTARY_CONSTITUENCIES: "parliamentary_constituencies",
    ASSEMBLY_CONSTITUENCIES: "assembly_constituencies",
    MASTER_MAKERS: "master_makers",
    MASTER_MAKER_LOVS: "master_maker_lovs",
    SUPPLIER_REPAIR_CENTERS: "supplier_repair_centers",
    FIRM_LOCATIONS: "firm_locations",
    ROLES: "roles",
    MATERIAL_SERIAL_NUMBERS: "material_serial_numbers",
    CUSTOMER_DESIGNATIONS: "customer_designations",
    GAA_HIERARCHIES: "gaa_hierarchies",
    NETWORK_HIERARCHIES: "network_hierarchies",
    PROJECT_MASTER_MAKERS: "project_master_makers",
    PROJECT_MASTER_MAKER_LOVS: "project_master_maker_lovs",
    ORGANIZATIONS: "organizations",
    ORGANIZATION_LOCATIONS: "organization_locations",
    FORMS: "forms",
    ORGANIZATION_STORES: "organization_stores",
    ORGANIZATION_STORE_LOCATIONS: "organization_store_locations",
    ATTRIBUTE_VALIDATION_BLOCKS: "attribute_validation_blocks",
    ATTRIBUTE_VISIBILITY_BLOCKS: "attribute_visibility_blocks",
    ATTRIBUTE_VALIDATION_CONDITIONS: "attribute_validation_conditions",
    DEFAULT_ATTRIBUTES: "default_attributes",
    REQUEST_APPROVALS: "request_approvals",
    FORM_ATTRIBUTES: "form_attributes",
    FORM_VALIDATION_BLOCKS: "form_validation_blocks",
    FORM_VISIBILITY_BLOCKS: "form_visibility_blocks",
    UESR_SESSOINS: "user_sessions",
    NETWORK_LEVEL_ENTRIES: "network_level_entries",
    ATTRIBUTE_VISIBILITY_CONDITIONS: "attribute_visibility_conditions",
    GAA_LEVEL_ENTRIES: "gaa_level_entries",
    WORK_AREA_ASSIGNMENT: "work_area_assignment",
    STOCK_LEDGER_DETAILS: "stock_ledger_details",
    STOCK_LEDGERS: "stock_ledgers",
    ALL_MASTERS_LIST: "all_masters_list",
    USER_MASTER_PERMISSIONS: "user_master_permissions",
    ALL_MASTER_COLUMNS_LIST: "all_master_columns",
    USER_MASTER_COLUMN_PERMISSION: "user_master_column_permission",
    USER_MASTER_LOV_PERMISSION: "user_master_lov_permission",
    ROLE_MASTER_COLUMN_PERMISSION: "role_master_column_permission",
    ROLE_MASTER_LOV_PERMISSIONS: "role_master_lov_permissions",
    APPROVERS: "approvers"
};

const entries = Object.entries(schema);
const finalSchema = [...JSON.parse(JSON.stringify(entries)), ...entries.map((item) => {
    item[0] += "_HISTORY";
    item[1] += "_history";
    return item;
})];
module.exports = Object.freeze(Object.fromEntries(finalSchema));
